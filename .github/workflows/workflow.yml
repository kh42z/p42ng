

defaults:
  run:
    working-directory: server
env:
  RUBY_VERSION: 2.7
  PG_USER: postgres
  PG_PASSWORD: secure
  PG_HOST: localhost

name: Rails tests
on:
  push:
    branches:
      - master
jobs:
  heroku-deploy:
    name: Heroku
    runs-on: ubuntu-18.04
    needs: [rspec-test]
    steps:
      - uses: actions/checkout@v2
      - uses: akhileshns/heroku-deploy@v3.12.12
        with:
          heroku_api_key: ${{secrets.HEROKU_API_KEY}}
          heroku_app_name: "p42ng"
          heroku_email: ${{secrets.HEROKU_EMAIL }}
          usedocker: true
          region: "eu"
        env:
          RAILS_ENV: production
          ALFRED_CODE: 13252eceff439797fa6f35e8172d244db71bf4696df286a8b7ffc2ad88dec88c
          MARVIN_APP_ID: 54aaca883a80bf7f0590646dab1e4596485789f577ff3d6ab766c85d1d30914e
          MARVIN_APP_SECRET: c320a88988be18b3b61e0fa75361e6e710f35d4bfa068ae6534cd97bb43b9821
          MARVIN_PROVIDER_CALLBACK: "https://api.intra.42.fr"
          MAILGUN_SECRET: 9425db56741dfb1ce3070c9a36225be4-e49cc42c-5a708301
          MAILGUN_DOMAIN: sandbox718829b193c64c62971d9b885fa1d507.mailgun.org
  rubocop-test:
    name: Rubocop
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-ruby@v1
        with:
          ruby-version: ${{ env.RUBY_VERSION }}
      - name: Install Rubocop
        run: gem install rubocop
      - name: Check code
        run: rubocop
  rspec-test:
    name: RSpec
    runs-on: ubuntu-18.04
    needs: [rubocop-test]
    services:
      postgres:
        image: postgres:12.1
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: ${{ env.PG_USER }}
          POSTGRES_PASSWORD: ${{ env.PG_PASSWORD }}
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-ruby@v1
        with:
          ruby-version: ${{ env.RUBY_VERSION }}
      - name: Install postgres client
        run: sudo apt-get install libpq-dev
      - name: Install dependencies
        run: |
          gem install bundler
          bundle install
          yarn install
      - name: Create database
        run: |
          bundler exec rails db:create RAILS_ENV=test
          bundler exec rails db:migrate RAILS_ENV=test
      - name: Run tests
        run: bundler exec rake
      - name: Upload coverage results
        uses: actions/upload-artifact@master
        if: always()
        with:
          name: coverage-report
          path: server/coverage
      - name: Simplecov Report
        uses: aki77/simplecov-report-action@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          resultPath: server/coverage