---
openapi: 3.0.1
info:
  title: Pong API
  description: Pong API
paths:
  "/api/ladders/{id}":
    get:
      summary: Retrieves an ladder
      tags:
      - Ladders
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: ladder found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ladder"
  "/api/ladders":
    get:
      summary: Retrieves all ladders
      tags:
      - Ladders
      responses:
        '200':
          description: ladders found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ladder"
  "/api/users":
    post:
      summary: Creates a user
      tags:
      - Users
      parameters: []
      responses:
        '201':
          description: user created
          content: {}
        '422':
          description: invalid request
          content: {}
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                nickname:
                  type: string
              required:
              - nickname
  "/api/users/{id}":
    parameters:
    - name: id
      in: path
      required: true
      schema:
        type: string
    patch:
      summary: Modifies an user
      tags:
      - Users
      operationId: patchUser
      parameters: []
      responses:
        '200':
          description: user modified
          content:
            application/json:
              schema:
                oneOf:
                - "$ref": "#/components/schemas/user"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/user"
    get:
      summary: Retrieves an user
      tags:
      - Users
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: user found
          content:
            application/json:
              schema:
                oneOf:
                - "$ref": "#/components/schemas/user"
    delete:
      summary: Deletes an user
      tags:
      - Users
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '204':
          description: user deleted
          content: {}
servers:
- url: http://{defaultHost}:3000
  variables:
    defaultHost:
      default: localhost
components:
  schemas:
    errors_object:
      type: object
      properties:
        errors:
          "$ref": "#/components/schemas/errors_map"
    errors_map:
      type: object
      additionalProperties:
        type: array
        items:
          type: string
    user:
      type: object
      properties:
        id:
          type: integer
        avatar:
          type: string
        guild_id:
          type: integer
          nullable: true
        status_id:
          type: integer
          nullable: true
        ladder_id:
          type: integer
          nullable: true
        two_factor:
          type: boolean
        nickname:
          type: string
      required:
      - nickname
    ladder:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        desc:
          type: string
          nullable: true
        mmr_threshold:
          type: integer
      required:
      - name
